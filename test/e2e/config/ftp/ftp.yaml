apiVersion: v1
kind: Service
metadata:
  name: my-ftp-service
  namespace: {{ .namespace }}
  labels:
    app: my-ftp
spec:
  type: ClusterIP
  ports:
    - port: 22
  selector:
    app: my-ftp
---
apiVersion: v1
kind: Secret
metadata:
  name: sftp-secret
  namespace: {{ .namespace }}
type: Opaque
stringData:
  user: myusername
  password: mypassword
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: my-ftp
  name: my-ftp
  namespace: {{ .namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-ftp
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app: my-ftp
    spec:
      volumes:
      - name: dummy-storage
        emptyDir: {}
      containers:
      - name: my-ftp
        args: ["myusername:mypassword:1001:100:incoming,outgoing"]
        image: atmoz/sftp
        ports:
        - containerPort: 22
          protocol: TCP
          name: ftp-server
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - mountPath: "/home/foo/upload"
          name: dummy-storage
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: cm-editor
  namespace: {{ .namespace }}
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["configmaps"]
  verbs: ["get", "watch", "list", "create", "update"]
---
# This role binding allows "default" to read configmaps in the "default" namespace.
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: cm-editor
  namespace: {{ .namespace }}
subjects:
- kind: ServiceAccount
  name: default
roleRef:
  kind: Role
  name: cm-editor
  apiGroup: rbac.authorization.k8s.io